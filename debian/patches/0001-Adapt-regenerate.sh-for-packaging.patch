From: Shengjing Zhu <zhsj@debian.org>
Date: Thu, 29 Dec 2022 23:29:54 +0800
Subject: Adapt regenerate.sh for packaging

Forwarded: not-needed
---
 regenerate.sh | 57 ++++++++++-----------------------------------------------
 1 file changed, 10 insertions(+), 47 deletions(-)

diff --git a/regenerate.sh b/regenerate.sh
index 3443ad9..2810ae4 100755
--- a/regenerate.sh
+++ b/regenerate.sh
@@ -22,46 +22,10 @@ function finish {
 }
 trap finish EXIT
 
-export GOBIN=${WORKDIR}/bin
-export PATH=${GOBIN}:${PATH}
-mkdir -p ${GOBIN}
-
-echo "remove existing generated files"
-# grpc_testingv3/testv3.pb.go is not re-generated because it was
-# intentionally generated by an older version of protoc-gen-go.
-rm -f $(find . -name '*.pb.go' | grep -v 'grpc_testingv3/testv3.pb.go')
-
-echo "go install google.golang.org/protobuf/cmd/protoc-gen-go"
-(cd test/tools && go install google.golang.org/protobuf/cmd/protoc-gen-go)
-
-echo "go install cmd/protoc-gen-go-grpc"
-(cd cmd/protoc-gen-go-grpc && go install .)
-
-echo "git clone https://github.com/grpc/grpc-proto"
-git clone --quiet https://github.com/grpc/grpc-proto ${WORKDIR}/grpc-proto
-
-# Pull in code.proto as a proto dependency
-mkdir -p ${WORKDIR}/googleapis/google/rpc
-echo "curl https://raw.githubusercontent.com/googleapis/googleapis/master/google/rpc/code.proto"
-curl --silent https://raw.githubusercontent.com/googleapis/googleapis/master/google/rpc/code.proto > ${WORKDIR}/googleapis/google/rpc/code.proto
-
-# Pull in the following repos to build the MeshCA config proto.
-ENVOY_API_REPOS=(
-  "https://github.com/envoyproxy/data-plane-api"
-  "https://github.com/cncf/udpa"
-  "https://github.com/envoyproxy/protoc-gen-validate"
-)
-for repo in ${ENVOY_API_REPOS[@]}; do
-  dirname=$(basename ${repo})
-  mkdir -p ${WORKDIR}/${dirname}
-  echo "git clone ${repo}"
-  git clone --quiet ${repo} ${WORKDIR}/${dirname}
-done
-
-# Pull in the MeshCA service proto.
-mkdir -p ${WORKDIR}/istio/istio/google/security/meshca/v1
-echo "curl https://raw.githubusercontent.com/istio/istio/master/security/proto/providers/google/meshca.proto"
-curl --silent https://raw.githubusercontent.com/istio/istio/master/security/proto/providers/google/meshca.proto > ${WORKDIR}/istio/istio/google/security/meshca/v1/meshca.proto
+mkdir -p ${WORKDIR}/grpc-proto/
+cp -r ./debian/missing-sources/grpc/grpc-proto/master/* ${WORKDIR}/grpc-proto/
+mkdir -p ${WORKDIR}/googleapis/
+cp -r ./debian/missing-sources/googleapis/googleapis/master/* ${WORKDIR}/googleapis/
 
 mkdir -p ${WORKDIR}/out
 
@@ -77,21 +41,24 @@ LEGACY_SOURCES=(
 
 # Generates only the new gRPC Service symbols
 SOURCES=(
-  $(git ls-files --exclude-standard --cached --others "*.proto" | grep -v '^\(profiling/proto/service.proto\|reflection/grpc_reflection_v1alpha/reflection.proto\)$')
+  $(find -name '*.proto' | grep -v '^./\(profiling/proto/service.proto\|reflection/grpc_reflection_v1alpha/reflection.proto\)$' | grep -v 'debian/missing-sources')
   ${WORKDIR}/grpc-proto/grpc/gcp/altscontext.proto
   ${WORKDIR}/grpc-proto/grpc/gcp/handshaker.proto
   ${WORKDIR}/grpc-proto/grpc/gcp/transport_security_common.proto
   ${WORKDIR}/grpc-proto/grpc/lookup/v1/rls.proto
   ${WORKDIR}/grpc-proto/grpc/lookup/v1/rls_config.proto
   ${WORKDIR}/grpc-proto/grpc/service_config/service_config.proto
-  ${WORKDIR}/grpc-proto/grpc/tls/provider/meshca/experimental/config.proto
-  ${WORKDIR}/istio/istio/google/security/meshca/v1/meshca.proto
 )
 
 # These options of the form 'Mfoo.proto=bar' instruct the codegen to use an
 # import path of 'bar' in the generated code when 'foo.proto' is imported in
 # one of the sources.
 OPTS=Mgrpc/service_config/service_config.proto=/internal/proto/grpc_service_config,\
+Mgoogle/protobuf/any.proto=github.com/golang/protobuf/ptypes/any,\
+Mgoogle/protobuf/duration.proto=github.com/golang/protobuf/ptypes/duration,\
+Mgoogle/protobuf/struct.proto=github.com/golang/protobuf/ptypes/struct,\
+Mgoogle/protobuf/timestamp.proto=github.com/golang/protobuf/ptypes/timestamp,\
+Mgoogle/protobuf/wrappers.proto=github.com/golang/protobuf/ptypes/wrappers,\
 Menvoy/config/core/v3/config_source.proto=github.com/envoyproxy/go-control-plane/envoy/config/core/v3
 
 for src in ${SOURCES[@]}; do
@@ -132,8 +99,4 @@ rm ${WORKDIR}/out/google.golang.org/grpc/reflection/grpc_testingv3/*.pb.go
 # grpc/service_config/service_config.proto does not have a go_package option.
 mv ${WORKDIR}/out/grpc/service_config/service_config.pb.go internal/proto/grpc_service_config
 
-# istio/google/security/meshca/v1/meshca.proto does not have a go_package option.
-mkdir -p ${WORKDIR}/out/google.golang.org/grpc/credentials/tls/certprovider/meshca/internal/v1/
-mv ${WORKDIR}/out/istio/google/security/meshca/v1/* ${WORKDIR}/out/google.golang.org/grpc/credentials/tls/certprovider/meshca/internal/v1/
-
 cp -R ${WORKDIR}/out/google.golang.org/grpc/* .
